---
import ThemeToggle from "./ThemeToggle.astro";
import Code from './icons/Code.astro'

export const navItems = [
  { title: "Experiencia", label: "experiencia", url: "/#experiencia" },
  { title: "Proyectos", label: "proyectos", url: "/#proyectos" },
  { title: "Sobre m√≠", label: "sobre-mi", url: "/#sobre-mi" },
  { title: "Contacto", label: "contacto", url: "mailto:ismaelp.dev@gmail.com" },
];
---
<header class="fixed top-0 inset-x-0 z-50 backdrop-blur bg-transparent dark:bg-gray-800/90 transition-shadow duration-300" id="site-header">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <div class="flex-shrink-0">
        <a href="/" class="text-xl font-bold text-gray-800 dark:text-gray-100"><Code/></a>
      </div>
      <nav class="hidden md:flex space-x-8 items-center">
        {navItems.map((link) => (
          <a
            href={link.url}
            aria-label={link.label}
            class="px-3 py-2 text-gray-600 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-500 transition"
          >
            {link.title}
          </a>
        ))}
        <ThemeToggle />
      </nav>
      <div class="md:hidden">
        <button id="mobile-menu-button" class="p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500">
          <svg id="menu-icon" class="h-6 w-6 block text-gray-700 dark:text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <svg id="close-icon" class="h-6 w-6 hidden text-gray-700 dark:text-gray-300" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  <nav id="mobile-menu" class="md:hidden hidden bg-white dark:bg-gray-800">
    <div class="px-2 pt-2 pb-3 space-y-1">
      {navItems.map((link) => (
        <a
          href={link.url}
          aria-label={link.label}
          class="block px-3 py-2 rounded-md text-gray-600 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-500 transition"
        >
          {link.title}
        </a>
      ))}
      <div class="px-3 py-2">
        <ThemeToggle />
      </div>
    </div>
  </nav>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const menuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIcon = document.getElementById("menu-icon");
    const closeIcon = document.getElementById("close-icon");

      if (menuButton && mobileMenu && menuIcon && closeIcon) {
      menuButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");
        menuIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      });
    }
    const sections = document.querySelectorAll("section");
    const navLinks = document.querySelectorAll("header nav a");

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navLinks.forEach((link) => {
            if (link.getAttribute("aria-label") === entry.target.id) {
              link.classList.add("text-blue-500");
            } else {
              link.classList.remove("text-blue-500");
            }
          });
        }
      });
    }, { threshold: 0.3 });

    sections.forEach((section) => observer.observe(section));

    document.addEventListener("visibilitychange", () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => observer.observe(section));
      }
    });
  });

  window.addEventListener("scroll", () => {
    const header = document.getElementById("site-header");
    if (header) {
      if (window.scrollY > 50) {
        header.classList.add("shadow-lg");
      } else {
        header.classList.remove("shadow-lg");
      }
    }
  });
</script>
